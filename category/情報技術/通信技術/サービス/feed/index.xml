<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>サービス  |  ぴたぶろぐ</title>
	<atom:link href="https://blog.pitan76.net/category/%E6%83%85%E5%A0%B1%E6%8A%80%E8%A1%93/%E9%80%9A%E4%BF%A1%E6%8A%80%E8%A1%93/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9/feed/" rel="self" type="application/rss+xml" />
	<link>https://blog.pitan76.net</link>
	<description>自分が書きたいことを書くだけのブログ</description>
	<lastBuildDate>Thu, 03 Aug 2023 11:51:57 +0000</lastBuildDate>
	<language>ja</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.2.2</generator>

<image>
	<url>https://blog.pitan76.net/wp-content/uploads/2022/07/cropped-109135739-1-32x32.png</url>
	<title>サービス  |  ぴたぶろぐ</title>
	<link>https://blog.pitan76.net</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>【CurseForge】MOD公開で一発合格するための備忘録</title>
		<link>https://blog.pitan76.net/20230803333/</link>
					<comments>https://blog.pitan76.net/20230803333/#respond</comments>
		
		<dc:creator><![CDATA[Pitan]]></dc:creator>
		<pubDate>Thu, 03 Aug 2023 10:09:15 +0000</pubDate>
				<category><![CDATA[Minecraft]]></category>
		<category><![CDATA[ゲーム]]></category>
		<category><![CDATA[サービス]]></category>
		<category><![CDATA[情報技術]]></category>
		<category><![CDATA[通信技術]]></category>
		<category><![CDATA[CurseForge]]></category>
		<guid isPermaLink="false">https://blog.pitan76.net/?p=333</guid>

					<description><![CDATA[こんにちは！自分用にメモをブログとして残しておきますが、他人にも参考になるようまとめたいと思います。 私はCurseForgeやModrinthへ数個のMODやプラグインをアップロードしてきましたが、審査に引っかかったこ [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>こんにちは！自分用にメモをブログとして残しておきますが、他人にも参考になるようまとめたいと思います。<br />
私はCurseForgeやModrinthへ数個のMODやプラグインをアップロードしてきましたが、審査に引っかかったことが何回もあります！（笑）</p>

  <div id="toc" class="toc tnt-number toc-center tnt-number border-element"><input type="checkbox" class="toc-checkbox" id="toc-checkbox-2" checked><label class="toc-title" for="toc-checkbox-2">目次</label>
    <div class="toc-content">
    <ol class="toc-list open"><li><a href="#toc1" tabindex="0">注意したい点</a><ol><li><a href="#toc2" tabindex="0">タイトルを要CHECK!</a></li><li><a href="#toc3" tabindex="0">サマリーを要CHECK!</a></li><li><a href="#toc4" tabindex="0">説明を要CHECK!</a><ol><li><a href="#toc5" tabindex="0">私が説明に書くこと</a></li></ol></li><li><a href="#toc6" tabindex="0">ファイルをCHECK!</a></li><li><a href="#toc7" tabindex="0">禁止されているコンテンツ</a></li></ol></li><li><a href="#toc8" tabindex="0">最後に</a></li></ol>
    </div>
  </div>

<h2><span id="toc1">注意したい点</span></h2>
<p>実は下記のページに載ってたみたいです。</p>
<ul>
<li><a href="https://support.curseforge.com/en/support/solutions/articles/9000197279-moderation-policies">https://support.curseforge.com/en/support/solutions/articles/9000197279-moderation-policies</a></li>
</ul>
<h3><span id="toc2">タイトルを要CHECK!</span></h3>
<p><img decoding="async" width="450" height="69" class="alignnone wp-image-335 size-full" src="https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted-1.png" srcset="https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted-1.png 450w, https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted-1-300x46.png 300w" sizes="(max-width: 450px) 100vw, 450px" /></p>
<p>以下が審査に引っかかるタイトル名となる特徴です。</p>
<div class="blank-box bb-tab bb-ng bb-red">
<ol>
<li><strong>「mod」という文字</strong>を含んではいけない</li>
<li><strong>バージョン</strong>を含んではいけない</li>
<li>タイトル名は<strong>英語以外</strong>はダメ</li>
</ol>
</div>
<p>1に関して、私は以前「Yamato Gun Mod」という名前でプロジェクトを作成し、MODをアップロードしたことがあるのですが、タイトルで引っかかってしまいました。<br />
なぜかでしょうか？？？<br />
理由は「Mod」という文字がアウトでした！そのため「Yamato Gun」にしましたが、この規制は何か少し厳しいような気がしますねｗ</p>
<p>2のバージョンはゲームバージョンとMODバージョンです。<br />
例えばゲームバージョンは1.20.2、1.18.2、1.12.2、1.7.10などの<strong>Minecraftのバージョン</strong>ことで、MODバージョンは自分で設定したバージョンです。というかとりあえず、バージョンのような文字列 (例: 1.0.0)はやめておきましょう。</p>
<p>3はそのままです、タイトルは<strong>英語</strong>にしないといけません。</p>
<h3><span id="toc3">サマリーを要CHECK!</span></h3>
<p><img decoding="async" width="420" height="59" class="alignnone wp-image-334 size-full" src="https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted.png" data-wp-editing="1" srcset="https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted.png 420w, https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted-300x42.png 300w" sizes="(max-width: 420px) 100vw, 420px" /></p>
<div class="blank-box bb-tab bb-ng bb-red">
<ol>
<li><strong>英語以外</strong>の説明はダメ</li>
<li>MODの特徴や要素を簡易的に説明</li>
</ol>
</div>
<p>詳細に書く必要はありません。簡潔に書いてください。「Add ruby tools」「A library mod」「The mod is add useful machines」みたいな感じでOkです。<br />
何を追加する、どうなるのかわからないようなサマリーや詳細に書きすぎたサマリーは却下されます。</p>
<h3><span id="toc4">説明を要CHECK!</span></h3>
<p><img decoding="async" width="1225" height="351" class="alignnone wp-image-336 size-full" src="https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted-2.png" srcset="https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted-2.png 1225w, https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted-2-300x86.png 300w, https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted-2-1024x293.png 1024w, https://blog.pitan76.net/wp-content/uploads/2023/08/Pasted-2-768x220.png 768w" sizes="(max-width: 1225px) 100vw, 1225px" /></p>
<p>たまにMODの目的と機能を正確に説明しないといけないと怒られることがあります。</p>
<h4><span id="toc5">私が説明に書くこと</span></h4>
<ul>
<li>動作環境 (マイクラのバージョン、Fabric/Forge/Quiltなど、前提MOD、クライアント/サーバーなど)</li>
<li>機能の説明 (概要と同じようなことを書いてもよいが、少し詳しく書く方がいいだろう、追加する要素があればできれば記述しておこう)</li>
</ul>
<p>この2点を記述しておけば問題ないと思うが、それでも審査が通らないのであれば、他のMODのプロジェクトページも見てみよう。</p>
<p>とりあえず、この3つを押さえておけば問題ないでしょう！</p>
<h3><span id="toc6">ファイルをCHECK!</span></h3>
<div class="alert-box common-icon-box">※まず、MODのJARファイルをアップロードしないとそもそも審査されないので注意です。</div>
<ul>
<li>破損していない、読み取れるファイルであること</li>
<li>危険性のあるプログラムはないこと</li>
<li>ブラックリストに登録されたファイルではないこと</li>
<li>まったく同じファイルが他のプロジェクトに既にアップロードされていないこと (別のプロジェクトとして再投稿する場合は移行前のプロジェクトから消しておくこと)</li>
</ul>
<p>ファイルはプロジェクト承認後も毎回、審査されます。<br />
早ければ3～5分、遅ければ1日以上かかることもあります。</p>
<h3><span id="toc7">禁止されているコンテンツ</span></h3>
<ul>
<li>アダルトコンテンツ</li>
<li>不適切とされる内容</li>
</ul>
<h2><span id="toc8">最後に</span></h2>
<p>これだけではありませんが、基本的にこれだけ知っておけば問題ないでしょう<br />
プロジェクトの審査には5時間～丸1日かかることが多く、稀に1週間かかることもあります。<br />
それではよいModdingライフを！</p>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.pitan76.net/20230803333/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>【Discord】強力なスパム対策ができるボット「Wick」を紹介します。</title>
		<link>https://blog.pitan76.net/20220813212/</link>
					<comments>https://blog.pitan76.net/20220813212/#respond</comments>
		
		<dc:creator><![CDATA[Pitan]]></dc:creator>
		<pubDate>Sat, 13 Aug 2022 08:07:17 +0000</pubDate>
				<category><![CDATA[Discord]]></category>
		<category><![CDATA[サービス]]></category>
		<category><![CDATA[ソフトウェア]]></category>
		<category><![CDATA[情報技術]]></category>
		<category><![CDATA[通信技術]]></category>
		<category><![CDATA[スパム対策]]></category>
		<guid isPermaLink="false">https://blog.pitan76.net/?p=212</guid>

					<description><![CDATA[目次 はじめに導入方法Wickの設定おすすめの設定ユーザーへWickの権限を与える便利なコマンドw!purge [削除するメッセージ数] (オプションなど)おわりに参考 はじめに Discordでは荒らされているサーバー [&#8230;]]]></description>
										<content:encoded><![CDATA[
  <div id="toc" class="toc tnt-number toc-center tnt-number border-element"><input type="checkbox" class="toc-checkbox" id="toc-checkbox-4" checked><label class="toc-title" for="toc-checkbox-4">目次</label>
    <div class="toc-content">
    <ol class="toc-list open"><li><a href="#toc1" tabindex="0">はじめに</a><ol><li><a href="#toc2" tabindex="0">導入方法</a></li><li><a href="#toc3" tabindex="0">Wickの設定</a><ol><li><a href="#toc4" tabindex="0">おすすめの設定</a></li><li><a href="#toc5" tabindex="0">ユーザーへWickの権限を与える</a></li></ol></li><li><a href="#toc6" tabindex="0">便利なコマンド</a><ol><li><a href="#toc7" tabindex="0">w!purge [削除するメッセージ数] (オプションなど)</a></li></ol></li></ol></li><li><a href="#toc8" tabindex="0">おわりに</a></li><li><a href="#toc9" tabindex="0">参考</a></li></ol>
    </div>
  </div>

<h2><span id="toc1">はじめに</span></h2>
<p>Discordでは荒らされているサーバーを数々見かけます。<br />
DiscordにはBAN、キック、タイムアウト、低速チャットなどがありますが、それだけでは必ずしもとは言いませんが、完全に荒らしを防ぐことができません。<br />
そのため、botで荒らし対策していることが多いので、今回は荒らし対策のボットの中で最も強力だと思った「Wick」を紹介したいと思います。</p>
<p>ほんと日本語でこのBot紹介している記事見かけませんよね。<br />
昔書いた記事を再度、ここで見やすく書き直すことにします。<br />
一部そのままにしているところもあります。</p>
<p>私も最初は公式のDocsを読みながら、フレンドに教えてもらいながらとセットアップに苦労しました。</p>
<div class="blank-box bb-tab bb-point bb-yellow">・カスタマイズ性が高い<br />
・Vortexのように導入制限はない<br />
・ほぼほぼスパマーを撃退してくれる</div>
<h3><span id="toc2">導入方法</span></h3>
<ol>
<li>まず、<a href="https://wickbot.com/">https://wickbot.com/</a>から「Add Wick」ボタンをクリックし、Discordのアカウントと紐付け、botをサーバーに導入しましょう。</li>
<li>Wickのロールの位置を上に持っていきましょう。<br />
<img decoding="async" id="thepasted-1" src="https://image02.seesaawiki.jp/f/o/fortunes-memo/fbOC_75yR8.png" /></li>
<li>サーバー上で「w!setup」と送信し、コマンドを実行しましょう。
<div class="alert-box common-icon-box">※このコマンドはサーバーの所有者、またはWickの権限(Discordの役職、ロールではない)所有者のみ実行できます。</div>
<p><img decoding="async" id="thepasted-2" src="https://image02.seesaawiki.jp/f/o/fortunes-memo/PdgUT_CHVf.png" /><br />
上の画像のようにすべての項目にチェックマークが付いていればWickのセットアップが成功しています。<br />
どれか1つでもバツマークが付いていると失敗しています。<br />
その際は再度、上に戻ってやり直しましょう。</p>
<div id="content_block_13-body" class="wiki-section-body-3 information-box common-icon-box">
<p>※確認したエラーのみ記載してます。もし、何かあれば報告ください。</p>
<table id="content_block_14">
<tbody>
<tr>
<th>エラーメッセージ</th>
<th>意味</th>
<th>対処法</th>
</tr>
<tr>
<td><a href="https://image01.seesaawiki.jp/f/o/fortunes-memo/UktzEeqSxe.png"><img decoding="async" src="https://image01.seesaawiki.jp/f/o/fortunes-memo/UktzEeqSxe.png" width="16" height="16" border="0" /></a> Checking Wick&#8217;s role position&#8230;</td>
<td>× Wickのロールの位置を確認中&#8230;</td>
<td>番号2を参照</td>
</tr>
<tr>
<td><a href="https://image01.seesaawiki.jp/f/o/fortunes-memo/UktzEeqSxe.png"><img decoding="async" src="https://image01.seesaawiki.jp/f/o/fortunes-memo/UktzEeqSxe.png" width="16" height="16" border="0" /></a> Checking for permissions&#8230;</td>
<td>× 権限を確認中&#8230;</td>
<td>素直に入れ直してWickに管理者権限を与えましょう。</td>
</tr>
<tr>
<td><a href="https://image01.seesaawiki.jp/f/o/fortunes-memo/UktzEeqSxe.png"><img decoding="async" src="https://image01.seesaawiki.jp/f/o/fortunes-memo/UktzEeqSxe.png" width="16" height="16" border="0" /></a> Only Server Owners (Permit5) and up can use this command!</td>
<td>× サーバー所有者(許可レベル5)以上のみ、このコマンドを使えます！</td>
<td>所有者がこのコマンドを実行する、または「ユーザーへWickの権限を与える」の項目を参照</td>
</tr>
</tbody>
</table>
</div>
</li>
</ol>
<h3><span id="toc3">Wickの設定</span></h3>
<div class="information-box common-icon-box"><a href="https://wickbot.com/docs/setup">https://wickbot.com/docs/setup</a><br />
こちらのドキュメントに細かく記載されています。</div>
<h4><span id="toc4">おすすめの設定</span></h4>
<ol>
<li><a href="https://wickbot.com/dashboard">https://wickbot.com/dashboard</a>から設定したいサーバーの青いマーク(Server Overview)を選択しましょう。<img decoding="async" width="1525" height="553" class="alignnone wp-image-213 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-14.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-14.png 1525w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-14-300x109.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-14-1024x371.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-14-768x278.png 768w" sizes="(max-width: 1525px) 100vw, 1525px" /></li>
<li>Auto Modの項目の「Filters」を選択<br />
<img decoding="async" id="thepasted-8" src="https://image01.seesaawiki.jp/f/o/fortunes-memo/jIu6ltJf7o.png" /></li>
<li>Warn(警告)、Mute(タイムアウト)、Kick(キック)、BANのどれかを選択し、Muteを選択した場合は、時間も設定しましょう。<br />
基本的に「Normal Message」(連投対策)と「Similar Message」(類似連投対策)は設定しておきましょう。<br />
<img decoding="async" width="1253" height="809" class="alignnone wp-image-215 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-16.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-16.png 1253w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-16-300x194.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-16-1024x661.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-16-768x496.png 768w" sizes="(max-width: 1253px) 100vw, 1253px" /></li>
</ol>
<h4><span id="toc5">ユーザーへWickの権限を与える</span></h4>
<p>w!s &lt;ユーザー/ロール&gt; ?add &lt;権限レベル？&gt;</p>
<p>ユーザー/ロールは名前でもIDでも構いません。<br />
権限レベル？は4がWickモデレーター、3がWick管理者、10が信頼されたWick管理者、11がサーバーオーナー、Wickオーナーとなるみたいです。</p>
<p><span data-slate-fragment="JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMnchcyUyMCUzQ3VzZXIlM0UlMjAlM0ZhZGQlMjAxMSUyMiUyQyUyMm1hcmtzJTIyJTNBJTVCJTdCJTIyb2JqZWN0JTIyJTNBJTIybWFyayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJjb2RlJTIyJTJDJTIyZGF0YSUyMiUzQSU3QiU3RCU3RCUyQyU3QiUyMm9iamVjdCUyMiUzQSUyMm1hcmslMjIlMkMlMjJ0eXBlJTIyJTNBJTIyYm9sZCUyMiUyQyUyMmRhdGElMjIlM0ElN0IlN0QlN0QlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyOGFiNTlhNDNjMjM2NDIzNjkzZjk4ZmIxNDcxZDA5ZTMlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjI3NTQ4MjdlMzZmZTI0ZWFmYmYyZDI2OGEyZDliNzdhYiUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMmQ2MmJlN2MzMThiODQxNmRhOGE1ZDFjOTQ2MTdiMjA2JTIyJTdE">設定例: w!s 0123456789101112 ?add 11</span></p>
<ul>
<li><a href="https://docs.wickbot.com/v3/commands/settings/statics#permit">https://docs.wickbot.com/v3/commands/settings/statics#permit</a></li>
</ul>
<h3><span id="toc6">便利なコマンド</span></h3>
<h4><span id="toc7">w!purge [削除するメッセージ数] (オプションなど)</span></h4>
<p>例えば、<span data-slate-fragment="JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMnchcHVyZ2UlMjAxMCUyMGhhcyUyMHdobyUyMGlzJTIwZm5ha2klMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMm1hcmslMjIlMkMlMjJ0eXBlJTIyJTNBJTIyY29kZSUyMiUyQyUyMmRhdGElMjIlM0ElN0IlN0QlN0QlMkMlN0IlMjJvYmplY3QlMjIlM0ElMjJtYXJrJTIyJTJDJTIydHlwZSUyMiUzQSUyMmJvbGQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTdEJTVEJTJDJTIyc2VsZWN0aW9ucyUyMiUzQSU1QiU1RCU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMmE3ZjIxZDdmMzlmNzRhYzJhNDNmODQzZjM3ZGE5Y2UxJTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyZmViYmRlMzlhNGQzNGM3ODk0YWIyZmM0MWI3NDRjNjIlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJmNmNjNmQzNTZhZjg0YzRmYWM3NDVmYWE5MDU4MDUxZiUyMiU3RA==">w!purge 10 -h who is fnakiだと&#8221;who is fnaki&#8221;を含むメッセージを10個消します。<br />
オプションは以下を参考にしてみてください。</span></p>
<ul>
<li><a href="https://docs.wickbot.com/v3/commands/moderation/purge">https://docs.wickbot.com/v3/commands/moderation/purge</a></li>
</ul>
<h2><span id="toc8">おわりに</span></h2>
<p>寝ていても荒らし対策してくれるので便利ですよね～^^<br />
ただ、設定も多いので困りました。</p>
<h2><span id="toc9">参考</span></h2>
<ul>
<li><a href="https://docs.wickbot.com/">https://docs.wickbot.com/</a></li>
<li><a href="https://wickbot.com/docs/setup">https://wickbot.com/docs/setup</a></li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.pitan76.net/20220813212/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>【Cloudflare】WikiChree.COMの設置にMuuMuuDomainとCoreServerでCloudflareを使った話</title>
		<link>https://blog.pitan76.net/20220807196/</link>
					<comments>https://blog.pitan76.net/20220807196/#respond</comments>
		
		<dc:creator><![CDATA[Pitan]]></dc:creator>
		<pubDate>Sun, 07 Aug 2022 10:25:20 +0000</pubDate>
				<category><![CDATA[サーバー]]></category>
		<category><![CDATA[サービス]]></category>
		<category><![CDATA[情報技術]]></category>
		<category><![CDATA[通信技術]]></category>
		<category><![CDATA[Cloudflare]]></category>
		<category><![CDATA[CoreServer]]></category>
		<category><![CDATA[MuuMuuDomain]]></category>
		<guid isPermaLink="false">https://blog.pitan76.net/?p=196</guid>

					<description><![CDATA[目次 はじめに前提条件Cloudflareアカウント登録サイト追加ネームサーバーの設定ネームサーバー設定ガイドおまけDDoS対策HTTPS化キャッシングおわりに はじめに WikiChree.COM、個人サイト、当ブログ [&#8230;]]]></description>
										<content:encoded><![CDATA[
  <div id="toc" class="toc tnt-number toc-center tnt-number border-element"><input type="checkbox" class="toc-checkbox" id="toc-checkbox-6" checked><label class="toc-title" for="toc-checkbox-6">目次</label>
    <div class="toc-content">
    <ol class="toc-list open"><li><a href="#toc1" tabindex="0">はじめに</a></li><li><a href="#toc2" tabindex="0">前提条件</a></li><li><a href="#toc3" tabindex="0">Cloudflare</a><ol><li><a href="#toc4" tabindex="0">アカウント登録</a></li><li><a href="#toc5" tabindex="0">サイト追加</a></li><li><a href="#toc6" tabindex="0">ネームサーバーの設定</a><ol><li><a href="#toc7" tabindex="0">ネームサーバー設定ガイド</a></li></ol></li></ol></li><li><a href="#toc8" tabindex="0">おまけ</a><ol><li><a href="#toc9" tabindex="0">DDoS対策</a></li><li><a href="#toc10" tabindex="0">HTTPS化</a></li><li><a href="#toc11" tabindex="0">キャッシング</a></li></ol></li><li><a href="#toc12" tabindex="0">おわりに</a></li></ol>
    </div>
  </div>

<h2><span id="toc1">はじめに</span></h2>
<p>WikiChree.COM、個人サイト、当ブログなど私の所有しているサイトではHTTPS化、サイバー攻撃(DDoS等)対策、キャッシング等をするためにCloudflareを使ってます。<br />
Cloudflareは有料な部分もありますが、基本的には無料で使うことはできます。<br />
今回はそのCloudflareのセットアップ方法を説明します。<br />
WikiChree.COMではMuuMuuDomainとCoreServerを使っているのでMuuMuuDomainでDNSの設定、CloudflareでのDNSはCoreServerのIPを参照させますが、他のサービスでも参考になるとは思います。</p>
<h2><span id="toc2">前提条件</span></h2>
<ul>
<li>独自ドメインを取得していて、ドメインからCoreServerのサーバーへアクセスできる状態であること。</li>
</ul>
<h2><span id="toc3">Cloudflare</span></h2>
<h3><span id="toc4">アカウント登録</span></h3>
<a rel="noopener" href="https://dash.cloudflare.com/sign-up" title="Please Wait... | Cloudflare" class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://s.wordpress.com/mshots/v1/https%3A%2F%2Fdash.cloudflare.com%2Fsign-up?w=160&#038;h=90" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">Please Wait... | Cloudflare</div><div class="blogcard-snippet external-blogcard-snippet"></div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://dash.cloudflare.com/sign-up" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">dash.cloudflare.com</div></div></div></div></a>
<p>上記のURLでCloudflareのアカウントを作成しましょう。<br />
右上から日本語を選択できます。</p>
<p><img decoding="async" width="935" height="554" class="alignnone wp-image-197 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted.png 935w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-300x178.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-768x455.png 768w" sizes="(max-width: 935px) 100vw, 935px" /></p>
<h3><span id="toc5">サイト追加</span></h3>
<p>作成ボタンをクリックしたら、左のサイドバーから「Web サイト」、真ん中の「サイトを追加」で進みましょう。</p>
<p><img decoding="async" width="950" height="753" class="alignnone wp-image-198 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-1.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-1.png 950w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-1-300x238.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-1-768x609.png 768w" sizes="(max-width: 950px) 100vw, 950px" /></p>
<p>自分のルートドメインを入力して進みましょう。</p>
<p><img decoding="async" width="639" height="329" class="alignnone wp-image-199 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-2.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-2.png 639w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-2-300x154.png 300w" sizes="(max-width: 639px) 100vw, 639px" /></p>
<p>無料である一番下のFreeプランにしました。</p>
<p><img decoding="async" width="894" height="876" class="alignnone wp-image-200 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-3.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-3.png 894w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-3-300x294.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-3-768x753.png 768w" sizes="(max-width: 894px) 100vw, 894px" /></p>
<p>以前のDNSを自動で取得してくれるため、DNS管理の画面が出てきます、そのまま進めてください。</p>
<h3><span id="toc6">ネームサーバーの設定</span></h3>
<p>以下の通りにドメイン レジストラ(MuuMuuDomain、Value Domain等)でCloudflareのネームサーバーを追加しましょう。</p>
<p><img decoding="async" width="815" height="864" class="alignnone wp-image-201 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-4.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-4.png 815w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-4-283x300.png 283w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-4-768x814.png 768w" sizes="(max-width: 815px) 100vw, 815px" /></p>
<p>MuuMuuDomainではネームサーバー設定変更のボタンをクリックしてネームサーバーの画面が開けます。<br />
サービスによってはネームサーバーの設定画面、もしくはDNS設定画面でネームサーバーを指定することができます。</p>
<p><img decoding="async" width="489" height="667" class="alignnone wp-image-202 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-5.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-5.png 489w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-5-220x300.png 220w" sizes="(max-width: 489px) 100vw, 489px" /></p>
<p><img decoding="async" width="401" height="432" class="alignnone wp-image-203 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-6.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-6.png 401w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-6-278x300.png 278w" sizes="(max-width: 401px) 100vw, 401px" /></p>
<p>上記のように<span class="bold red">必ずCloudflareからコピーした</span>ネームサーバーのドメインを貼り付けてください。<br />
既に私は登録しているので、画像でムームードメインでの登録例を見せています。<br />
Cloudflareの方を進めましょう。<br />
レジストラ(ドメインサービス)によっては反映までに時間がかかるものもあるようですが、私はすぐに反映されました。<br />
あ、CoreServer側の設定は不要でしたね^^;</p>
<h4><span id="toc7">ネームサーバー設定ガイド</span></h4>
<ul>
<li>お名前.com: <a href="https://www.onamae.com/guide/p/67">https://www.onamae.com/guide/p/67</a></li>
<li>ムームードメイン: <a href="https://support.muumuu-domain.com/hc/ja/articles/360047097273-%E3%83%8D%E3%83%BC%E3%83%A0%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E6%96%B9%E6%B3%95-GMO%E3%83%9A%E3%83%91%E3%83%9C%E4%BB%A5%E5%A4%96%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9-">https://support.muumuu-domain.com/hc/ja/articles/360047097273-%E3%83%8D%E3%83%BC%E3%83%A0%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E6%96%B9%E6%B3%95-GMO%E3%83%9A%E3%83%91%E3%83%9C%E4%BB%A5%E5%A4%96%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9-</a></li>
<li>バリュードメイン: <a href="https://www.value-domain.com/userguide/manual/modns">https://www.value-domain.com/userguide/manual/modns</a></li>
<li>Google Domains: <a href="https://support.google.com/domains/answer/3290309?hl=ja">https://support.google.com/domains/answer/3290309?hl=ja</a></li>
</ul>
<h2><span id="toc8">おまけ</span></h2>
<h3><span id="toc9">DDoS対策</span></h3>
<p>DDoS攻撃を受けている際はサイドバーの「概要」から「Under Attack モード」を有効にしてみてください。</p>
<p><img decoding="async" width="338" height="61" class="alignnone wp-image-204 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-7.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-7.png 338w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-7-300x54.png 300w" sizes="(max-width: 338px) 100vw, 338px" /></p>
<p>一度オンにしてオフにしてみると以下のような画面が出てきます。</p>
<p><img decoding="async" width="898" height="504" class="alignnone wp-image-205 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-8.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-8.png 898w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-8-300x168.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-8-768x431.png 768w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-8-120x68.png 120w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-8-160x90.png 160w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-8-320x180.png 320w" sizes="(max-width: 898px) 100vw, 898px" /></p>
<p>セキュリティ レベルは攻撃されていないのであれば普通は標準かオフでもいいでしょう。<br />
1日1回、毎回DDoS攻撃されているのであれば、Unser Attack モード、もしくは高にしましょう。</p>
<h3><span id="toc10">HTTPS化</span></h3>
<p>サイドバーの「SSL/TLS」からSSLの設定を開きましょう。</p>
<p><img decoding="async" width="1040" height="497" class="alignnone wp-image-206 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-9.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-9.png 1040w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-9-300x143.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-9-1024x489.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-9-768x367.png 768w" sizes="(max-width: 1040px) 100vw, 1040px" /></p>
<p>サーバー上でSSL化しているのであれば「フル」、最初からSSL化していないのであれば「フレキシブル」でいいでしょう。<br />
これだけでHTTPS化は完了なのですが、ついでに以下の設定も行いましょう。</p>
<p>サイドバーの「SSL/TLS」＞「エッジ証明書」を開きましょう。</p>
<p><img decoding="async" width="1040" height="239" class="alignnone wp-image-207 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-10.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-10.png 1040w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-10-300x69.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-10-1024x235.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-10-768x176.png 768w" sizes="(max-width: 1040px) 100vw, 1040px" /></p>
<p><img decoding="async" width="1046" height="271" class="alignnone wp-image-208 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-11.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-11.png 1046w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-11-300x78.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-11-1024x265.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-11-768x199.png 768w" sizes="(max-width: 1046px) 100vw, 1046px" /></p>
<p>私は上記のように設定しています。<br />
日和見暗号化とは、暗号化済み、SSL化済みしているが、見た目上はhttpのままにできるという機能です。SEO対策には影響ありませんのでオンにしてても問題はありませんが、httpsの方が私は好きなのでオフにしてますね。</p>
<h3><span id="toc11">キャッシング</span></h3>
<p>勝手にキャッシングされるようになってますが、3時間ぐらいにした方が良さそうです。JavaScript、CSSを更新しても、このキャッシュで更新されずに困ることがあるんですよね。<br />
<img decoding="async" width="1095" height="861" class="alignnone wp-image-209 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-12.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-12.png 1095w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-12-300x236.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-12-1024x805.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-12-768x604.png 768w" sizes="(max-width: 1095px) 100vw, 1095px" /></p>
<p>3時間にしておきます。<br />
また、更新したCSS、JavaScript、画像など確認したい際は開発モードを有効にするといいでしょう。</p>
<p><img decoding="async" width="335" height="68" class="alignnone wp-image-210 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-13.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-13.png 335w, https://blog.pitan76.net/wp-content/uploads/2022/08/Pasted-13-300x61.png 300w" sizes="(max-width: 335px) 100vw, 335px" /></p>
<h2><span id="toc12">おわりに</span></h2>
<p>イメージ的には「独自ドメイン」→「Cloudflare」→「CoreServer」といった感じでしょうかね。</p>
<p>Cloudflareはアクセス解析、ドメイン購入といろいろできるので素晴らしいサービスだと思います。<br />
無料でここまでできるのも凄いですよね。</p>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.pitan76.net/20220807196/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>GitHub Pagesを利用してMavenリポジトリをつくる</title>
		<link>https://blog.pitan76.net/20220729178/</link>
					<comments>https://blog.pitan76.net/20220729178/#respond</comments>
		
		<dc:creator><![CDATA[Pitan]]></dc:creator>
		<pubDate>Fri, 29 Jul 2022 03:18:02 +0000</pubDate>
				<category><![CDATA[Git]]></category>
		<category><![CDATA[GitHub]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[PHP]]></category>
		<category><![CDATA[サービス]]></category>
		<category><![CDATA[プログラミング]]></category>
		<category><![CDATA[情報技術]]></category>
		<category><![CDATA[通信技術]]></category>
		<category><![CDATA[GitHub Pages]]></category>
		<category><![CDATA[Maven]]></category>
		<guid isPermaLink="false">https://blog.pitan76.net/?p=178</guid>

					<description><![CDATA[目次 はじめに設置したMavenリポジトリPHPスクリプト前提条件やり方maven.phpの仕様さいごに関連リンク はじめに FabricMCのMOD開発でライブラリをつくったのでMavenリポジトリをGitHubのリポ [&#8230;]]]></description>
										<content:encoded><![CDATA[
  <div id="toc" class="toc tnt-number toc-center tnt-number border-element"><input type="checkbox" class="toc-checkbox" id="toc-checkbox-8" checked><label class="toc-title" for="toc-checkbox-8">目次</label>
    <div class="toc-content">
    <ol class="toc-list open"><li><a href="#toc1" tabindex="0">はじめに</a><ol><li><a href="#toc2" tabindex="0">設置したMavenリポジトリ</a></li><li><a href="#toc3" tabindex="0">PHPスクリプト</a></li><li><a href="#toc4" tabindex="0">前提条件</a></li><li><a href="#toc5" tabindex="0">やり方</a></li><li><a href="#toc6" tabindex="0">maven.phpの仕様</a></li></ol></li><li><a href="#toc7" tabindex="0">さいごに</a><ol><li><a href="#toc8" tabindex="0">関連リンク</a></li></ol></li></ol>
    </div>
  </div>

<h2><span id="toc1">はじめに</span></h2>
<p>FabricMCのMOD開発でライブラリをつくったのでMavenリポジトリをGitHubのリポジトリへ設置し、GitHub Pagesで公開してみました。</p>
<h3><span id="toc2">設置したMavenリポジトリ</span></h3>
<a rel="noopener" href="https://maven.pkom.ml/" title="https://maven.pkom.ml/" class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://s.wordpress.com/mshots/v1/https%3A%2F%2Fmaven.pkom.ml%2F?w=160&#038;h=90" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">https://maven.pkom.ml/</div><div class="blogcard-snippet external-blogcard-snippet"></div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://maven.pkom.ml/" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">maven.pkom.ml</div></div></div></div></a>
<h3 id="content_1_2"><span id="toc3">PHPスクリプト</span></h3>
<p>PHPでMavenリポジトリをアップロードし、自動的にディレクトリリストのHTMLを生成し、GitHubへプッシュするスクリプトを書いてみました。</p>
<a rel="noopener" href="https://github.com/Pitan76/maven/raw/main/maven.php" title="Index of {$displaydir}" class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://s.wordpress.com/mshots/v1/https%3A%2F%2Fgithub.com%2FPitan76%2Fmaven%2Fraw%2Fmain%2Fmaven.php?w=160&#038;h=90" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">Index of {$displaydir}</div><div class="blogcard-snippet external-blogcard-snippet"></div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://github.com/Pitan76/maven/raw/main/maven.php" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">github.com</div></div></div></div></a>
<h3 id="content_1_3"><span id="toc4">前提条件</span></h3>
<ul class="list1 list-indent1">
<li>PHPを動作させるWebサーバーをインストールしておく(XAMPP、LAMP等)</li>
<li>Gitを入れておく</li>
<li>GitHubのアカウントをつくっておく</li>
<li>Mavenリポジトリとして使うGitリポジトリをGitHubにつくっておく</li>
</ul>
<h3><span id="toc5">やり方</span></h3>
<p>Pitan Mod Wikiの文章をそのまま載せておきます。</p>
<a rel="noopener" href="https://wikichree.com/pitan76/?Diary/2022-07-14" title="Diary/2022-07-14 - Pitan&#x20;Mod&#x20;Wiki" class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://s.wordpress.com/mshots/v1/https%3A%2F%2Fwikichree.com%2Fpitan76%2F%3FDiary%2F2022-07-14?w=160&#038;h=90" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">Diary/2022-07-14 - Pitan&#x20;Mod&#x20;Wiki</div><div class="blogcard-snippet external-blogcard-snippet"></div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://wikichree.com/pitan76/?Diary/2022-07-14" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">wikichree.com</div></div></div></div></a>
<p>1. GitHubのGitリポジトリを開き、[Settings]→[Pages]→SourceがNoneになっているのでbranchを選択する<br />
2. 特定のhtdocsにmavenリポジトリとするフォルダをつくる。(htdocs/maven/にしました。)<br />
3. つくったフォルダにmaven.phpを放り込む。(今回はhtdocs/maven/maven.phpに放り込みました。)<br />
4. つくったフォルダでターミナルを開き、<strong>git init</strong>を実行<br />
5. <strong>git add *</strong>を実行<br />
6. <strong>git commit -m &#8220;(任意)&#8221;</strong>を実行<br />
7. <strong>git branch -M main</strong>を実行<br />
8. <strong>git remote add origin https://github.com/(ユーザー名)/(リポジトリ名).git</strong>を実行<br />
9. <strong>git push -u origin main</strong>を実行<br />
10. ブラウザでmaven.phpを開き、jarをアップロードする。(私の場合はlocalhost/maven/maven.phpとなっています)</p>
<h3 id="content_1_5"><span id="toc6">maven.phpの仕様</span></h3>
<ul class="list1 list-indent1">
<li>アップロード後、自動でgit push</li>
<li>ハッシュファイルを作成する</li>
<li>ディレクトリリストのindex.htmlを自動生成する</li>
</ul>
<p>ここからは任意ですが、Customドメインもついでに設定しておきます<br />
Custom domainで自分のドメインを設定しました。</p>
<h2><span id="toc7">さいごに</span></h2>
<p>MavenリポジトリをGitHub Pagesに設置し、ライブラリを公開できて面白かったです。<br />
正しい方法ではないと思うので外部の関連サイトも載せておきます。</p>
<h3><span id="toc8">関連リンク</span></h3>
<a rel="noopener" href="https://weblabo.oscasierra.net/maven-deploy-github/" title="GitHubにMavenリポジトリを構築してライブラリを公開する方法 |" class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://blog.pitan76.net/wp-content/uploads/cocoon-resources/blog-card-cache/35d08b22d0390132263fef83e824cac8.png" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">GitHubにMavenリポジトリを構築してライブラリを公開する方法 |</div><div class="blogcard-snippet external-blogcard-snippet">本稿では、Maven リポジトリを GitHub 上に作成して jar ライブラリを配布する方法について解説します。</div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://weblabo.oscasierra.net/maven-deploy-github/" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">weblabo.oscasierra.net</div></div></div></div></a>
<a rel="noopener" href="https://com4dc.hatenablog.com/entry/2020/03/30/224953" title="GithubのRepositoryをmavenリポジトリとして使う - com4dc’s blog" class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://blog.pitan76.net/wp-content/uploads/cocoon-resources/blog-card-cache/7f1b87261cff8d08d94b7a2dcc02f4f3.jpg" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">GithubのRepositoryをmavenリポジトリとして使う - com4dc’s blog</div><div class="blogcard-snippet external-blogcard-snippet">なんで今さら 数年前に開発が停止してしまっているコードをフォークして利用したい 元のソースのApache License 2.0。フォークしたコードはOSSとして公開しないといけない？（うろ覚え・・・） ソースコードをそのまま組み込むのはNGそうな気がする？ 修正と再頒布そのものは禁止されていない（はず maven の...</div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://com4dc.hatenablog.com/entry/2020/03/30/224953" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">com4dc.hatenablog.com</div></div></div></div></a>
<a rel="noopener" href="https://qiita.com/koduki/items/6babcc6f2b233da96e06" title="2020年のMavenリポジトリの作り方 - Qiita" class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://qiita-user-contents.imgix.net/https%3A%2F%2Fcdn.qiita.com%2Fassets%2Fpublic%2Farticle-ogp-background-9f5428127621718a910c8b63951390ad.png?ixlib=rb-4.0.0&#038;w=1200&#038;mark64=aHR0cHM6Ly9xaWl0YS11c2VyLWNvbnRlbnRzLmltZ2l4Lm5ldC9-dGV4dD9peGxpYj1yYi00LjAuMCZ3PTkxNiZ0eHQ9MjAyMCVFNSVCOSVCNCVFMyU4MSVBRU1hdmVuJUUzJTgzJUFBJUUzJTgzJTlEJUUzJTgyJUI4JUUzJTgzJTg4JUUzJTgzJUFBJUUzJTgxJUFFJUU0JUJEJTlDJUUzJTgyJThBJUU2JTk2JUI5JnR4dC1jb2xvcj0lMjMyMTIxMjEmdHh0LWZvbnQ9SGlyYWdpbm8lMjBTYW5zJTIwVzYmdHh0LXNpemU9NTYmdHh0LWNsaXA9ZWxsaXBzaXMmdHh0LWFsaWduPWxlZnQlMkN0b3Amcz1jOWJkN2RhOTRhYmY5ZjI5MTQ3OTE4ZmI2ODFjYThkOA&#038;mark-x=142&#038;mark-y=112&#038;blend64=aHR0cHM6Ly9xaWl0YS11c2VyLWNvbnRlbnRzLmltZ2l4Lm5ldC9-dGV4dD9peGxpYj1yYi00LjAuMCZ3PTYxNiZ0eHQ9JTQwa29kdWtpJnR4dC1jb2xvcj0lMjMyMTIxMjEmdHh0LWZvbnQ9SGlyYWdpbm8lMjBTYW5zJTIwVzYmdHh0LXNpemU9MzYmdHh0LWFsaWduPWxlZnQlMkN0b3Amcz01N2QxMjJjOGVkNzgwMmM0ZGM0NzhmNzUzYTVjN2M2Yw&#038;blend-x=142&#038;blend-y=491&#038;blend-mode=normal&#038;s=5065ef28c6bc083f309e217ff68622f0" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">2020年のMavenリポジトリの作り方 - Qiita</div><div class="blogcard-snippet external-blogcard-snippet">

はじめに

Javaのエンジニアであれば何だかんだでMavenリポジトリを使うことは非常に多いと思います。Gradleであっても使いますしね。

OSSなどはセントラルリポジトリから落とすとして自作のライブラリの管理をどうしていま...</div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://qiita.com/koduki/items/6babcc6f2b233da96e06" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">qiita.com</div></div></div></div></a>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.pitan76.net/20220729178/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>【Minecraft】無料でポート開放せずにサーバーを公開するツール</title>
		<link>https://blog.pitan76.net/20220723148/</link>
					<comments>https://blog.pitan76.net/20220723148/#respond</comments>
		
		<dc:creator><![CDATA[Pitan]]></dc:creator>
		<pubDate>Sat, 23 Jul 2022 07:41:35 +0000</pubDate>
				<category><![CDATA[Minecraft]]></category>
		<category><![CDATA[ゲーム]]></category>
		<category><![CDATA[サーバー]]></category>
		<category><![CDATA[サービス]]></category>
		<category><![CDATA[情報技術]]></category>
		<category><![CDATA[通信技術]]></category>
		<category><![CDATA[中継サーバー]]></category>
		<guid isPermaLink="false">https://blog.pitan76.net/?p=148</guid>

					<description><![CDATA[ポート開放せずにサーバーを公開するツールを2つ紹介します。 ポート開放できない方もいると思いますし、手軽にゲームサーバーを公開できるので便利だと思います。 Minecraftで使う方は多いと思います。 仕組みは中継サーバ [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>ポート開放せずにサーバーを公開するツールを2つ紹介します。<br />
ポート開放できない方もいると思いますし、手軽にゲームサーバーを公開できるので便利だと思います。<br />
Minecraftで使う方は多いと思います。<br />
仕組みは中継サーバー(リレーサーバー)を利用しているらしいです。<br />
これを無料で提供してくれるのは有り難いですね。</p>

  <div id="toc" class="toc tnt-number toc-center tnt-number border-element"><input type="checkbox" class="toc-checkbox" id="toc-checkbox-10" checked><label class="toc-title" for="toc-checkbox-10">目次</label>
    <div class="toc-content">
    <ol class="toc-list open"><li><a href="#toc1" tabindex="0">ゲームサーバー公開(ホスト)ツール | GameServerHostingTool</a></li><li><a href="#toc2" tabindex="0">playit</a></li></ol>
    </div>
  </div>

<h2><span id="toc1">ゲームサーバー公開(ホスト)ツール | GameServerHostingTool</span></h2>
<p>こちらは日本産のゲームサーバー公開ツールです。</p>
<a rel="noopener" href="https://gsht.io/" title="セキュア・シェア・ネット (旧・ゲームサーバー公開(ホスト)ツール) 配布ページ" class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://blog.pitan76.net/wp-content/uploads/cocoon-resources/blog-card-cache/0480dcc2a490fd31289c62043ab961ec.png" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">セキュア・シェア・ネット (旧・ゲームサーバー公開(ホスト)ツール) 配布ページ</div><div class="blogcard-snippet external-blogcard-snippet">ポート開放不要でゲーム等のサーバーを簡単に公開できるツールの配布ページ、紹介ページです。</div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://gsht.io/" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">gsht.io</div></div></div></div></a>
<h2><span id="toc2">playit</span></h2>
<p>こちらは海外産のゲームサーバーを公開するためのツールです。</p>
<a rel="noopener" href="https://playit.gg/" title="playit.gg" class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://s.wordpress.com/mshots/v1/https%3A%2F%2Fplayit.gg%2F?w=160&#038;h=90" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">playit.gg</div><div class="blogcard-snippet external-blogcard-snippet"></div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://playit.gg/" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">playit.gg</div></div></div></div></a>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.pitan76.net/20220723148/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>【CurseForge】アップロードしたファイルを削除する方法</title>
		<link>https://blog.pitan76.net/20220721119/</link>
					<comments>https://blog.pitan76.net/20220721119/#respond</comments>
		
		<dc:creator><![CDATA[Pitan]]></dc:creator>
		<pubDate>Thu, 21 Jul 2022 06:45:21 +0000</pubDate>
				<category><![CDATA[Minecraft]]></category>
		<category><![CDATA[ゲーム]]></category>
		<category><![CDATA[サービス]]></category>
		<category><![CDATA[情報技術]]></category>
		<category><![CDATA[通信技術]]></category>
		<category><![CDATA[CurseForge]]></category>
		<guid isPermaLink="false">https://blog.pitan76.net/?p=119</guid>

					<description><![CDATA[目次 初めに画像付きの手順簡易的に手順をまとめる最後に 初めに 間違って別のMODをアップロードしてしまい、削除したかったのですが、削除ボタンがありませんでした。そこでフォーラムで調べてみたところこれを参考にしてみると削 [&#8230;]]]></description>
										<content:encoded><![CDATA[
  <div id="toc" class="toc tnt-number toc-center tnt-number border-element"><input type="checkbox" class="toc-checkbox" id="toc-checkbox-12" checked><label class="toc-title" for="toc-checkbox-12">目次</label>
    <div class="toc-content">
    <ol class="toc-list open"><li><a href="#toc1" tabindex="0">初めに</a></li><li><a href="#toc2" tabindex="0">画像付きの手順</a></li><li><a href="#toc3" tabindex="0">簡易的に手順をまとめる</a></li><li><a href="#toc4" tabindex="0">最後に</a></li></ol>
    </div>
  </div>

<h2><span id="toc1">初めに</span></h2>
<p><img decoding="async" width="913" height="318" class="alignnone wp-image-121 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-1.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-1.png 913w, https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-1-300x104.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-1-768x267.png 768w" sizes="(max-width: 913px) 100vw, 913px" /></p>
<p>間違って別のMODをアップロードしてしまい、削除したかったのですが、削除ボタンがありませんでした。そこでフォーラムで調べてみたところこれを参考にしてみると削除できました。</p>
<a rel="noopener" href="https://minecraft.curseforge.com/forums/modding-java-edition/java-mods/ideas/5014-deleting-files-of-a-project" title="Just a moment..." class="blogcard-wrap external-blogcard-wrap a-wrap cf" target="_blank"><div class="blogcard external-blogcard eb-left cf"><div class="blogcard-label external-blogcard-label"><span class="fa"></span></div><figure class="blogcard-thumbnail external-blogcard-thumbnail"><img src="https://s.wordpress.com/mshots/v1/https%3A%2F%2Fminecraft.curseforge.com%2Fforums%2Fmodding-java-edition%2Fjava-mods%2Fideas%2F5014-deleting-files-of-a-project?w=160&#038;h=90" alt="" class="blogcard-thumb-image external-blogcard-thumb-image" width="160" height="90" /></figure><div class="blogcard-content external-blogcard-content"><div class="blogcard-title external-blogcard-title">Just a moment...</div><div class="blogcard-snippet external-blogcard-snippet"></div></div><div class="blogcard-footer external-blogcard-footer cf"><div class="blogcard-site external-blogcard-site"><div class="blogcard-favicon external-blogcard-favicon"><img src="https://www.google.com/s2/favicons?domain=https://minecraft.curseforge.com/forums/modding-java-edition/java-mods/ideas/5014-deleting-files-of-a-project" alt="" class="blogcard-favicon-image external-blogcard-favicon-image" width="16" height="16" /></div><div class="blogcard-domain external-blogcard-domain">minecraft.curseforge.com</div></div></div></div></a>
<h2><span id="toc2">画像付きの手順</span></h2>
<p>削除したいファイルにチェックします。</p>
<p><img decoding="async" width="258" height="340" class="alignnone wp-image-122 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-2.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-2.png 258w, https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-2-228x300.png 228w" sizes="(max-width: 258px) 100vw, 258px" /></p>
<p>Archiveボタンをクリック。</p>
<p><img decoding="async" width="608" height="337" class="alignnone wp-image-123 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-3.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-3.png 608w, https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-3-300x166.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-3-120x68.png 120w, https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-3-160x90.png 160w" sizes="(max-width: 608px) 100vw, 608px" /></p>
<p>ダイアログのような画面が出てくると思うのでArchive Filesをクリック。<img decoding="async" width="249" height="228" class="alignnone wp-image-124 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-4.png" /></p>
<p>StatusをArchivedの項目に変える。<br />
そしてファイルの詳細画面を開くとDeleteボタンが表示されているのでクリックすると削除できます。</p>
<p><img decoding="async" width="914" height="607" class="alignnone wp-image-125 size-full" src="https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-5.png" srcset="https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-5.png 914w, https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-5-300x199.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/07/Pasted-5-768x510.png 768w" sizes="(max-width: 914px) 100vw, 914px" /></p>
<h2><span id="toc3">簡易的に手順をまとめる</span></h2>
<ol>
<li>削除したいファイルのチェックボックスにチェックを入れる。</li>
<li>「Archive」ボタンをクリックする。</li>
<li>「Archive Files」ボタンをクリックする。</li>
<li>Statusを「Archived」に変更する。</li>
<li>ファイルのリンクを開く。</li>
<li>「Delete」ボタンをクリックする。</li>
</ol>
<h2><span id="toc4">最後に</span></h2>
<p>少し面倒かな～と思いますが、誤ってファイルを削除してしまうことはないかと思います。<br />
この頃はCurseForge以外にModrinthというModを配布するためのサイトが出てきたみたいですね</p>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.pitan76.net/20220721119/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>【無料Wikiレンタルサービス】WikiChree.COMの紹介</title>
		<link>https://blog.pitan76.net/2022072068/</link>
					<comments>https://blog.pitan76.net/2022072068/#respond</comments>
		
		<dc:creator><![CDATA[Pitan]]></dc:creator>
		<pubDate>Tue, 19 Jul 2022 15:46:33 +0000</pubDate>
				<category><![CDATA[PukiWiki]]></category>
		<category><![CDATA[サーバー]]></category>
		<category><![CDATA[サービス]]></category>
		<category><![CDATA[ソフトウェア]]></category>
		<category><![CDATA[情報技術]]></category>
		<category><![CDATA[通信技術]]></category>
		<category><![CDATA[Web]]></category>
		<category><![CDATA[Webサービス]]></category>
		<category><![CDATA[Wiki]]></category>
		<category><![CDATA[レンタルサービス]]></category>
		<category><![CDATA[自作サービス]]></category>
		<guid isPermaLink="false">https://blog.pitan76.net/?p=68</guid>

					<description><![CDATA[わいがつくった無料でWikiをつくれるサービスを紹介したいと思います。 是非使って見てください。 https://wikichree.com/ 目次 特徴その1. PukiWikiその2. カスタマイズ性その3. WIS [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>わいがつくった無料でWikiをつくれるサービスを紹介したいと思います。<br />
是非使って見てください。<br />
<a href="https://wikichree.com/">https://wikichree.com/</a></p>

  <div id="toc" class="toc tnt-number toc-center tnt-number border-element"><input type="checkbox" class="toc-checkbox" id="toc-checkbox-14" checked><label class="toc-title" for="toc-checkbox-14">目次</label>
    <div class="toc-content">
    <ol class="toc-list open"><li><a href="#toc1" tabindex="0">特徴</a><ol><li><a href="#toc2" tabindex="0">その1. PukiWiki</a></li><li><a href="#toc3" tabindex="0">その2. カスタマイズ性</a></li><li><a href="#toc4" tabindex="0">その3. WISYWIGエディタ</a></li><li><a href="#toc5" tabindex="0">その4. ユーザー管理</a></li><li><a href="#toc6" tabindex="0">その5. Discord</a></li></ol></li><li><a href="#toc7" tabindex="0">短所</a><ol><li><a href="#toc8" tabindex="0">スキンが少ない</a></li><li><a href="#toc9" tabindex="0">広告</a></li><li><a href="#toc10" tabindex="0">利用者が少ない</a></li></ol></li><li><a href="#toc11" tabindex="0">結果</a></li></ol>
    </div>
  </div>

<h2><span id="toc1">特徴</span></h2>
<h3><span id="toc2">その1. PukiWiki</span></h3>
<p>PukiWikiは日本産のOSSのCMSであり、主にWikiとして使うことが多いです。<br />
使い方によってはブログサイトとして使っている方もいますし様々です。</p>
<h3><span id="toc3">その2. カスタマイズ性</span></h3>
<p>他のレンタルサービスとは違い、プラグインを自分で選択していれることができます。<br />
ただし、セキュリティの観点からプラグインのアップロードはできません。要望なら募集しています。</p>
<h3><span id="toc4">その3. WISYWIGエディタ</span></h3>
<p>EasyEditといった私がつくったWISYWIGプラグインを導入することができます。</p>
<h3><span id="toc5">その4. ユーザー管理</span></h3>
<p>編集ユーザーを追加したりすることができます。<br />
ただし、アカウント登録は今のところありません。</p>
<h3><span id="toc6">その5. Discord</span></h3>
<p>Discordにて質問する場所があります。</p>
<h2><span id="toc7">短所</span></h2>
<h3><span id="toc8">スキンが少ない</span></h3>
<p>現在のところ以下のスキンのみとなっています。<br />
<input id="skin_default" checked="checked" name="change_skin" type="radio" value="default" /><label for="skin_default">デフォルトスキン</label><br />
<input id="skin_orangebox" name="change_skin" type="radio" value="orangebox" /><label for="skin_orangebox">OrangeBox</label><br />
<input id="skin_bluebox" name="change_skin" type="radio" value="bluebox" /><label for="skin_bluebox">BlueBox</label><br />
<input id="skin_modernskin" name="change_skin" type="radio" value="modernskin" /><label for="skin_modernskin">ModernSkin</label><br />
<input id="skin_modernskin_black" name="change_skin" type="radio" value="modernskin_black" /><label for="skin_modernskin_black">ModernSkin (Black ver)</label><br />
<input id="skin_monobook" name="change_skin" type="radio" value="monobook" /><label for="skin_monobook">Monobook for PukiWiki</label><br />
<input id="skin_tffacwiki" name="change_skin" type="radio" value="tffacwiki" /><label for="skin_tffacwiki">TFFAC Wikiのスキン</label><br />
<input id="skin_street" name="change_skin" type="radio" value="street" /><label for="skin_street">Street</label><br />
<input id="skin_bootstrap" name="change_skin" type="radio" value="bootstrap" /><label for="skin_bootstrap">Bootstrap</label><br />
<input id="skin_plus" name="change_skin" type="radio" value="plus" /><label for="skin_plus">PukiWiki Plus!風スキン</label><br />
<input id="skin_ika" name="change_skin" type="radio" value="ika" /><label for="skin_ika">イカスキン</label></p>
<h3><span id="toc9">広告</span></h3>
<p>広告鬱陶しいですよね。収益が単に欲しい理由もありますが、維持費を回収したいのもあります。<br />
正直言うと維持費を回収するほど収益がありませんｗ</p>
<h3><span id="toc10">利用者が少ない</span></h3>
<p>許して&#8230;ください&#8230;（笑）</p>
<h2><span id="toc11">結果</span></h2>
<p>レンタルサービスの中ではAtWikiとWIKIWIKI.JPは最強！（ry</p>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.pitan76.net/2022072068/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>JitPackでJava 8以外を使う方法</title>
		<link>https://blog.pitan76.net/2022072064/</link>
					<comments>https://blog.pitan76.net/2022072064/#respond</comments>
		
		<dc:creator><![CDATA[Pitan]]></dc:creator>
		<pubDate>Tue, 19 Jul 2022 15:30:51 +0000</pubDate>
				<category><![CDATA[GitHub]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[JitPack]]></category>
		<category><![CDATA[Minecraft]]></category>
		<category><![CDATA[ゲーム]]></category>
		<category><![CDATA[サービス]]></category>
		<category><![CDATA[プログラミング]]></category>
		<category><![CDATA[情報技術]]></category>
		<category><![CDATA[通信技術]]></category>
		<guid isPermaLink="false">https://blog.pitan76.net/?p=64</guid>

					<description><![CDATA[FabricMCのMOD開発でライブラリをJitPackにあげたかったのだが、ビルドでエラーが発生してしまった。そこでjitpack.ymlでjdkを指定したところ、一時期動いたのだが、また動作しなくなったため、以下のよ [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>FabricMCのMOD開発でライブラリをJitPackにあげたかったのだが、ビルドでエラーが発生してしまった。そこでjitpack.ymlで<a class="keyword" href="http://d.hatena.ne.jp/keyword/jdk">jdk</a>を指定したところ、一時期動いたのだが、また動作しなくなったため、以下のようにbefore_install:をymlに追加すると解決する。<br />
jitpack.ymlは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C7%A5%A3%A5%EC%A5%AF%A5%C8">ディレクト</a>リ直下に配置する。</p>
<p><strong>jitpack.yml</strong></p>
<pre>before_install:
  - <a class="keyword" href="http://d.hatena.ne.jp/keyword/wget">wget</a> <a href="https://github.com/sormuras/bach/raw/master/install-jdk.sh">https://github.com/sormuras/bach/raw/master/install-jdk.sh</a>
  - source ./install-<a class="keyword" href="http://d.hatena.ne.jp/keyword/jdk">jdk</a>.sh --feature 17 --license <a class="keyword" href="http://d.hatena.ne.jp/keyword/GPL">GPL</a>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/jdk">jdk</a>:
  - openjdk17</pre>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.pitan76.net/2022072064/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>【WordPress】GitHub Pagesを利用して静的化したWordPressをほぼ無料で公開する</title>
		<link>https://blog.pitan76.net/2022072049/</link>
					<comments>https://blog.pitan76.net/2022072049/#respond</comments>
		
		<dc:creator><![CDATA[Pitan]]></dc:creator>
		<pubDate>Tue, 19 Jul 2022 15:20:12 +0000</pubDate>
				<category><![CDATA[Git]]></category>
		<category><![CDATA[GitHub]]></category>
		<category><![CDATA[JavaScript]]></category>
		<category><![CDATA[PHP]]></category>
		<category><![CDATA[WordPress]]></category>
		<category><![CDATA[サーバー]]></category>
		<category><![CDATA[サービス]]></category>
		<category><![CDATA[ソフトウェア]]></category>
		<category><![CDATA[プログラミング]]></category>
		<category><![CDATA[情報技術]]></category>
		<category><![CDATA[通信技術]]></category>
		<category><![CDATA[GitHub Pages]]></category>
		<category><![CDATA[WordPressプラグイン]]></category>
		<guid isPermaLink="false">https://blog.pitan76.net/?p=49</guid>

					<description><![CDATA[元々、このブログ以前のブログはレンタルサーバーで動かしていました。 あまり更新しなかったため、必要性はないと感じ、新たにWordPressをローカルへ導入し、静的化した後、GitHub Pagesで運用することを考えまし [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>元々、このブログ以前のブログはレンタルサーバーで動かしていました。<br />
あまり更新しなかったため、必要性はないと感じ、新たにWordPressをローカルへ導入し、静的化した後、GitHub Pagesで運用することを考えました。<br />
この２日間かけて、ようやく少し使えるような形になりました。<br />
今回は、WordPressプラグインである、Simply Staticを使って静的化したいと思います。<br />
Cocoonテーマを利用しているので少し変わるかもしれません。<br />
私はWordPressに関しては完全に素人なので申し訳ないです。</p>

  <div id="toc" class="toc tnt-number toc-center tnt-number border-element"><input type="checkbox" class="toc-checkbox" id="toc-checkbox-18" checked><label class="toc-title" for="toc-checkbox-18">目次</label>
    <div class="toc-content">
    <ol class="toc-list open"><li><a href="#toc1" tabindex="0">手順</a></li><li><a href="#toc2" tabindex="0">Simply Staticの導入</a></li><li><a href="#toc3" tabindex="0">GitHub の設定</a></li><li><a href="#toc4" tabindex="0">おまけ</a><ol><li><a href="#toc5" tabindex="0">検索を機能させる</a></li><li><a href="#toc6" tabindex="0">コメントを機能させる</a></li></ol></li></ol>
    </div>
  </div>

<h2><span id="toc1">手順</span></h2>
<p>簡単にまとめておきます。</p>
<ol>
<li style="list-style-type: none;">
<ol>
<li>Simply Staticを導入する</li>
<li>適当にSimply Static用のフォルダをつくる (つくったフォルダをsimplystatic/とします)</li>
<li>WPの管理メニューのSimply Staticのページから静的ファイルを生成する</li>
<li>simplystatic/をGitリポジトリにする (simplystatic下で以下のコマンドを実行)
<pre>git init
git add *
git commit -m "first"
git remote add origin https://github.com/(ユーザー名)/(リポジトリ名).git
git push origin main</pre>
</li>
<li><a href="https://www.lotusdigital.jp/b/web/wordpress%E9%9D%99%E7%9A%84%E5%8C%96%E3%81%AE%E3%81%9F%E3%82%81simply-static%E3%82%92%E4%BD%BF%E7%94%A8/">conv_for_simply.rb</a>という日本語フォルダを変換してくれるGemをsimplystatic/につくる</li>
<li>WordPressのルートにbatファイル(push.bat)をつくる
<pre>cd ./simplystatic/
ruby conv_for_simply.rb
git add *
git commit -m "update"
git push</pre>
</li>
<li>batファイルを実行する</li>
<li>GitHub Pagesの設定をする</li>
</ol>
</li>
</ol>
<h2><span id="toc2">Simply Staticの導入</span></h2>
<p><img decoding="async" class="alignnone wp-image-51 size-large" src="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-234530-1024x254.png" alt="" width="1024" height="254" srcset="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-234530-1024x254.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-234530-300x75.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-234530-768x191.png 768w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-234530-1536x382.png 1536w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-234530.png 1723w" sizes="(max-width: 1024px) 100vw, 1024px" /></p>
<p>※インストール後、必ず<span class="bold red">有効化</span>しておきましょう。</p>
<p>こちらのプラグインは静的化するためのプラグインです。<br />
静的化とは静的ファイルであるHTML、JS、CSS、画像など簡単に言えばアクセスしてもソースが変化しないクライアントサイドのファイルに変換することを指します。<br />
つまり、PHPが生成したソースをHTMLファイルとして保存します。</p>
<p>適当にSimply Static用のフォルダをつくります。つくったフォルダをsimplystatic/とします。</p>
<p>正しく導入できれば、WordPressの管理メニューのサイドバーにSimply Staticという項目が追加されていると思います。<br />
<img decoding="async" class="alignnone size-medium wp-image-52" src="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235147-300x147.png" alt="" width="300" height="147" srcset="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235147-300x147.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235147.png 334w" sizes="(max-width: 300px) 100vw, 300px" /></p>
<p>まず、設定を選びましょう。<br />
<img decoding="async" class="alignnone wp-image-54 size-large" src="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235507-1024x726.png" alt="" width="1024" height="726" srcset="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235507-1024x726.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235507-300x213.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235507-768x544.png 768w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235507.png 1205w" sizes="(max-width: 1024px) 100vw, 1024px" /></p>
<p>配送方法はローカルディレクトリに設定してあげましょう。<br />
ローカルディレクトリの入力欄にはつくったフォルダであるsimplystatic/(任意)のパスを指定します。</p>
<p><img decoding="async" class="alignnone wp-image-53 size-large" src="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235402-1024x258.png" alt="" width="1024" height="258" srcset="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235402-1024x258.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235402-300x76.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235402-768x194.png 768w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-19-235402.png 1244w" sizes="(max-width: 1024px) 100vw, 1024px" /></p>
<p>生成を選択し、<span class="bold blue">静的ファイルを生成する</span>をクリックしましょう。</p>
<p>待機すると生成されると思います。<br />
クソ長いですよね、、、一分もかかりました&#8230;(笑)</p>
<h2><span id="toc3">GitHub の設定</span></h2>
<p><img decoding="async" class="alignnone wp-image-55 size-large" src="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-20-000111-1024x700.png" alt="" width="1024" height="700" srcset="https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-20-000111-1024x700.png 1024w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-20-000111-300x205.png 300w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-20-000111-768x525.png 768w, https://blog.pitan76.net/wp-content/uploads/2022/07/スクリーンショット-2022-07-20-000111.png 1141w" sizes="(max-width: 1024px) 100vw, 1024px" /></p>
<p>GitHubのリポジトリでSettingsを開き、Pagesの項目に移動してください。<br />
Sourceのブランチをmainで選択してSaveをクリックしましょう。<br />
これで完了なのですが、Custom domainも私は設定しました。</p>
<h2><span id="toc4">おまけ</span></h2>
<h3><span id="toc5">検索を機能させる</span></h3>
<p><strong><span class="marker-red">※こちらの検索機能に関しては完全に機能しているわけではありませんのでご了承ください</span></strong></p>
<p>静的化したら検索機能が動作しないんですよ。まあ当たり前なことです。<br />
検索機能はPHPでつくられており、サーバーサイドで動的に処理するものなのです。<br />
つまり、クライアント側で処理できるようにインデックス化されたものも静的化しないとなりません。<br />
WordPressにはRest APIがあります。<br />
APIで生成されたjsonを静的化してしまえばよいという考えになりました。<br />
めちゃくちゃなことしてますが、私はこうするしかないと思いました。<br />
そのためのPHPスクリプトをここにおいておきます。<br />
名前は適当ですが、なんでもいいです。</p>
<ul>
<li>push.php</li>
</ul>
<pre>&lt;?php
define('URL', dirname((empty($_SERVER['HTTPS']) ? 'http://' : 'https://') . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']) . "/");
define('DIR', "simplystatic/");

function save_url2static($path, $ext = 'json') {
$src = file_get_contents(URL . $path);
if (!file_exists(DIR . $path))
mkdir(DIR . $path, 0777, true);
$src = str_replace(str_replace('/', '\/', URL), '/', $src);
file_put_contents(DIR . $path . "/index." . $ext, $src);
}

save_url2static("wp-json/wp/v2/posts");
save_url2static("wp-json/wp/v2/pages");
save_url2static("wp-json/wp/v2/media");
save_url2static("wp-json/wp/v2/comments");
save_url2static("wp-json/wp/v2/taxonomies");
save_url2static("wp-json/wp/v2/taxonomies");
save_url2static("static-json/categories");

if (!file_exists(DIR . 'conv_for_simply.rb'))
copy('conv_for_simply.rb', DIR . 'conv_for_simply.rb');
copy('client.js', DIR . 'client.js');

echo exec('push.bat') . '&lt;br /&gt;';
echo "pushed!&lt;br /&gt;";
exit;</pre>
<ul>
<li>client.js</li>
</ul>
<pre>var $client_lang = {
search_result: "“$1” の検索結果",
search_in_site: "サイト内を検索",
posts_not_found: "投稿が見つかりませんでした。"
};
var $url = new URL(window.location.href);
var $params = $url.searchParams;
var $htmlSetted = false;

function apprStr($str) {
$str = $str.toLowerCase();
$str = $str.replace(/(&lt;([^&gt;]+)&gt;)/gi, '');
$str = $str.replace(/[Ａ-Ｚａ-ｚ０-９]/g, function($m) {
return String.fromCharCode($m.charCodeAt(0) - 0xFEE0);
});
$str = $str.replace(/[\u30a1-\u30f6]/g, function($m) {
return String.fromCharCode($m.charCodeAt(0) - 0x60);
});
return $str;
}

function getMeta($metaProperty) {
var $metas = document.getElementsByTagName('meta');
for (let $j = 0; $j &lt; $metas.length; $j++) {
if ($metas[$j].getAttribute('property') === $metaProperty) {
return $metas[$j].getAttribute('content');
}
}
}

if ($params.has('s') ) {
var $s = $params.get('s');
var $isFound = false;
var $html = `
&lt;h1 id="archive-title" class="archive-title"&gt;&lt;span class="fa fa-search" aria-hidden="true"&gt;&lt;/span&gt;"${$s}"&lt;/h1&gt;
&lt;form class="search-box input-box" method="get" action="/"&gt;
&lt;input type="text" placeholder="${$client_lang['search_in_site']}" name="s" class="search-edit" aria-label="input" value="${$s}"&gt;
&lt;button type="submit" class="search-submit" aria-label="button"&gt;&lt;span class="fa fa-search" aria-hidden="true"&gt;&lt;/span&gt;&lt;/button&gt;
&lt;/form&gt;
&lt;div id="list" class="list ect-entry-card front-page-type-index"&gt;
`;
document.title = $client_lang['search_result'].replace('$1', $s) + " | " + getMeta("og:site_name");

var $categories_name = new Array();
fetch('./static-json/categories/index.json') // /index.json
.then(($response) =&gt; $response.json())
.then(($data) =&gt; {
if ($data !== undefined)
Object.keys($data).forEach($key =&gt; {
var $item = $data[$key];
$categories_name[$item.term_id] = $item.name;
});
fetch('./wp-json/wp/v2/posts/index.json')
.then(($response) =&gt; $response.json())
.then(($data) =&gt; {
if ($data !== undefined)
$data.forEach($item =&gt; {
if (apprStr($item.title.rendered).indexOf(apprStr($s)) != -1 || apprStr($item.content.rendered).indexOf(apprStr($s)) != -1) {
$isFound = true;

var $categories_html;
$item.categories.forEach($id =&gt; {
$categories_html += '&lt;span class="entry-category"&gt;' + $categories_name[$id] + '&lt;/span&gt;';
});
var $post_date = $item.date.replace('-', '.');
$post_date = $post_date.substr(0, $post_date.indexOf('T'));

$html += `
&lt;a href="${$item.link}" class="entry-card-wrap a-wrap border-element cf" title="${$item.title.rendered}"&gt;
&lt;article&gt;
&lt;figure class="entry-card-thumb card-thumb e-card-thumb"&gt;
&lt;img data-src="/wp-content/themes/cocoon-master/images/no-image-320.png" alt="" class="no-image entry-card-thumb-image list-no-image lozad lozad-img" loading="lazy" width="320" height="180" /&gt;&lt;noscript&gt;&lt;img src="/wp-content/themes/cocoon-master/images/no-image-320.png" alt="" class="no-image entry-card-thumb-image list-no-image" width="320" height="180" /&gt;&lt;/noscript&gt; &lt;span class="cat-label cat-label-13"&gt;Minecraft&lt;/span&gt; &lt;/figure&gt;&lt;!-- /.entry-card-thumb --&gt;
&lt;div class="entry-card-content card-content e-card-content"&gt;
&lt;h2 class="entry-card-title card-title e-card-title" itemprop="headline"&gt;${$item.title.rendered}&lt;/h2&gt;
&lt;div class="entry-card-snippet card-snippet e-card-snippet"&gt;
${$item.excerpt.rendered}
&lt;/div&gt;
&lt;div class="entry-card-meta card-meta e-card-meta"&gt;
&lt;div class="entry-card-info e-card-info"&gt;
&lt;span class="post-date"&gt;&lt;span class="fa fa-clock-o" aria-hidden="true"&gt;&lt;/span&gt; ${$post_date}&lt;/span&gt;
&lt;/div&gt;
&lt;div class="entry-card-categorys"&gt;${$categories_html}&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;!-- /.entry-card-content --&gt;
&lt;/article&gt;
&lt;/a&gt;
`;
}
});
if ($isFound === false) {
$html += `
&lt;div class="posts-not-found"&gt;
&lt;h2&gt;NOT FOUND&lt;/h2&gt;
&lt;p&gt;${$client_lang['posts_not_found']}&lt;/p&gt;
&lt;/div&gt;
`;
}
$html += `&lt;/div&gt;&lt;!-- .list --&gt;`;
document.addEventListener("DOMContentLoaded", function() {
if ($htmlSetted === false) {
document.getElementById("main").innerHTML = $html;
$htmlSetted = true;
}
});
window.addEventListener("load", function() {
if ($htmlSetted === false) {
document.getElementById("main").innerHTML = $html;
$htmlSetted = true;
}
});
});
});
}
</pre>
<p>テーマのheader.phpの&lt;/head&gt;前に以下のコードを加える</p>
<pre>&lt;script src="./client.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;</pre>
<h3><span id="toc6">コメントを機能させる</span></h3>
<p>Utterancesというものを使い、GitHubのIssueをサイトに埋め込み、コメント欄として利用します。<br />
<a href="https://utteranc.es/">https://utteranc.es/</a><br />
テーマのcomments.phpを書き換えます。</p>
<pre>&lt;?php //コメントエリア
/**
* Cocoon WordPress Theme
* @author: yhira
* @link: https://wp-cocoon.com/
* @license: http://www.gnu.org/licenses/gpl-2.0.html GPL v2 or later
*/

if ( !defined( 'ABSPATH' ) ) exit;

if ( is_comment_allow() || have_comments() ): ?&gt;
&lt;div id="utteranc_comment"&gt;
&lt;!-- comment area --&gt;
<span class="bold red marker-red">ここにコード</span>
&lt;/div&gt;
&lt;?php endif ?&gt;</pre>
<p>生成したコードを「ここにコード」に貼り付けましょう。</p>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>https://blog.pitan76.net/2022072049/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
